import 'react-native-gesture-handler';
import React, {useLayoutEffect} from 'react';
import {NavigationContainer, useNavigation} from '@react-navigation/native';
import {createDrawerNavigator} from '@react-navigation/drawer';
import {createMaterialTopTabNavigator} from '@react-navigation/material-top-tabs';
import {createNativeStackNavigator} from '@react-navigation/native-stack';
import {View, Text, Pressable} from 'react-native';
import Feather from 'react-native-vector-icons/Feather';
import {DrawerActions} from '@react-navigation/native';

const Drawer = createDrawerNavigator();
const Tab = createMaterialTopTabNavigator();
const Stack = createNativeStackNavigator();

const HomeScreen = ({navigation}) => {
  return (
    <View style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>
      <Text onPress={() => navigation.navigate('Detail')}>Home Screen</Text>
    </View>
  );
};

const DrawerContent = ({navigation}) => {
  return (
    <View style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>
      <Text onPress={() => navigation.navigate('Home')}>Home</Text>
      <Text onPress={() => navigation.navigate('Tabs')}>Tabs</Text>
    </View>
  );
};

const Tab1Screen = () => {
  return (
    <View style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>
      <Text>Tab 1 Screen</Text>
    </View>
  );
};

const NewsUpdate = () => {
  return (
    <View style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>
      <Text>Tab 2 Screen</Text>
    </View>
  );
};

const DetailScreen = () => {
  return (
    <View style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>
      <Text>Detail Screen</Text>
    </View>
  );
};

const HomeStack = () => {
  return (
    <Stack.Navigator>
      <Stack.Screen name="PanelMenu" component={HomeScreen} />
      <Stack.Screen name="Detail" component={DetailScreen} />
    </Stack.Navigator>
  );
};

const TabStack = () => {
  return (
    <Tab.Navigator>
      <Tab.Screen name="الرئيسية" component={Tab1Screen} />
      <Tab.Screen name="أخر الأخبار" component={NewsUpdate} />
    </Tab.Navigator>
  );
};

function MyComponent() {
  const navigation = useNavigation();

  const handlePress = () => {
    navigation.dispatch(DrawerActions.openDrawer());
  };

  return (
    <Drawer.Navigator
      drawerContent={props => <DrawerContent {...props} />}
      screenOptions={{
        drawerPosition: 'right',
        //  headerLeft:null; bte5fe
        headerLeft: () => (
          <Pressable onPress={handlePress} style={{marginRight: 20}}>
            <Feather name="menu" size={24} color="black" />
          </Pressable>
        ),

        headerRight: () => (
          <Pressable onPress={handlePress} style={{marginRight: 20}}>
            <Feather name="menu" size={24} color="black" />
          </Pressable>
        ),
      }}>
      <Drawer.Screen name="Tabs" component={TabStack} />
      <Drawer.Screen name="Home" component={HomeStack} />
    </Drawer.Navigator>
  );
}

const App = () => {
  return (
    <NavigationContainer>
      <MyComponent />
    </NavigationContainer>
  );
};

export default App;
================================================

import 'react-native-gesture-handler';
import React from 'react';
import {NavigationContainer, useNavigation} from '@react-navigation/native';
import {createDrawerNavigator} from '@react-navigation/drawer';
import {createMaterialTopTabNavigator} from '@react-navigation/material-top-tabs';
import {createNativeStackNavigator} from '@react-navigation/native-stack';
import {View, Text, Pressable, Image, StatusBar} from 'react-native';
import Feather from 'react-native-vector-icons/Feather';
import EvilIcons from 'react-native-vector-icons/EvilIcons';

import {DrawerActions} from '@react-navigation/native';

const Drawer = createDrawerNavigator();
const Tab = createMaterialTopTabNavigator();
const Stack = createNativeStackNavigator();

const HomeScreen = ({navigation}) => {
  return (
    <View style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>
      <Text onPress={() => navigation.navigate('Detail')}>Home Screen</Text>
    </View>
  );
};

const DrawerContent = ({navigation}) => {
  return (
    <View style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>
      <Text onPress={() => navigation.navigate('Home')}>Home</Text>
      <Text onPress={() => navigation.navigate('Tabs')}>Tabs</Text>
    </View>
  );
};

const Tab1Screen = () => {
  return (
    <View style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>
      <Text>Tab 1 Screen</Text>
    </View>
  );
};

const NewsUpdate = () => {
  return (
    <View style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>
      <Text>Tab 2 Screen</Text>
    </View>
  );
};

const DetailScreen = () => {
  return (
    <View style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>
      <Text>Detail Screen</Text>
    </View>
  );
};

const HomeStack = () => {
  return (
    <Stack.Navigator>
      <Stack.Screen name="PanelMenu" component={HomeScreen} />
      <Stack.Screen name="Detail" component={DetailScreen} />
    </Stack.Navigator>
  );
};

const TabStack = () => {
  return (
    <Tab.Navigator
      screenOptions={{
        tabBarActiveTintColor: 'white',
        tabBarStyle: {
          backgroundColor: '#03296a',
        },
      }}>
      <Tab.Screen name="الرئيسية" component={Tab1Screen} />
      <Tab.Screen name="أخر الأخبار" component={NewsUpdate} />
    </Tab.Navigator>
  );
};

function MyComponent() {
  const navigation = useNavigation();

  const handlePress = () => {
    navigation.dispatch(DrawerActions.openDrawer());
  };

  return (
    <Drawer.Navigator
      drawerContent={props => <DrawerContent {...props} />}
      screenOptions={{
        drawerPosition: 'right',
        //  headerLeft:null; bte5fe
        headerStyle: {backgroundColor: '#03296a'},
        headerTitleAlign: 'center',
        headerTitle: () => (
          <Image
            source={require('./assets/sync-logo.png')}
            style={{width: 120, height: 100, resizeMode: 'contain'}}
          />
        ),
        headerLeft: () => (
          <Pressable style={{marginLeft: 10}}>
            <EvilIcons name="search" size={30} color="white" />
          </Pressable>
        ),

        headerRight: () => (
          <Pressable onPress={handlePress} style={{marginRight: 20}}>
            <Feather name="menu" size={24} color="white" />
          </Pressable>
        ),
      }}>
      <Drawer.Screen name="Tabs" component={TabStack} />
      <Drawer.Screen name="Home" component={HomeStack} />
    </Drawer.Navigator>
  );
}

const App = () => {
  return (
    <>
      <StatusBar backgroundColor="#03296a" />
      <NavigationContainer>
        <MyComponent />
      </NavigationContainer>
    </>
  );
};

export default App;
============================================================
import 'react-native-gesture-handler';
import React from 'react';
import {NavigationContainer, useNavigation} from '@react-navigation/native';
import {createDrawerNavigator} from '@react-navigation/drawer';
import {createMaterialTopTabNavigator} from '@react-navigation/material-top-tabs';
import {createNativeStackNavigator} from '@react-navigation/native-stack';
import {View, Text, Pressable, Image, StatusBar} from 'react-native';
import Feather from 'react-native-vector-icons/Feather';
import EvilIcons from 'react-native-vector-icons/EvilIcons';

import {DrawerActions} from '@react-navigation/native';

const Drawer = createDrawerNavigator();
const Tab = createMaterialTopTabNavigator();
const Stack = createNativeStackNavigator();

const HomeScreen = ({navigation}) => {
  return (
    <View style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>
      <Text onPress={() => navigation.navigate('Detail')}>Home Screen</Text>
    </View>
  );
};

const DrawerContent = ({navigation}) => {
  return (
    <View style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>
      <Text onPress={() => navigation.navigate('Home')}>Home</Text>
      <Text onPress={() => navigation.navigate('Tabs')}>Tabs</Text>
    </View>
  );
};

const Tab1Screen = () => {
  return (
    <View style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>
      <Text>Tab 1 Screen</Text>
    </View>
  );
};

const NewsUpdate = () => {
  return (
    <View style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>
      <Text>Tab 2 Screen</Text>
    </View>
  );
};

const DetailScreen = () => {
  return (
    <View style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>
      <Text>Detail Screen</Text>
    </View>
  );
};

const HomeStack = () => {
  return (
    <Stack.Navigator>
      <Stack.Screen name="PanelMenu" component={HomeScreen} />
      <Stack.Screen name="Detail" component={DetailScreen} />
    </Stack.Navigator>
  );
};

const TabStack = () => {
  return (
    <Tab.Navigator
      screenOptions={{
        tabBarActiveTintColor: 'white',
        tabBarStyle: {
          backgroundColor: '#03296a',
        },
        tabBarShowLabel: true,
        headerShown: false,
      }}
      tabBarOptions={{
        indicatorStyle: {
          backgroundColor: 'white',
        },
        tabStyle: {
          borderTopWidth: 8,
          borderTopColor: '#03296a',
        },
      }}>
      <Tab.Screen name="الرئيسية" component={Tab1Screen} />
      <Tab.Screen name="أخر الأخبار" component={NewsUpdate} />
    </Tab.Navigator>
  );
};

function MyDraw() {
  const navigation = useNavigation();

  const handlePress = () => {
    navigation.dispatch(DrawerActions.openDrawer());
  };

  return (
    <Drawer.Navigator
      drawerContent={props => <DrawerContent {...props} />}
      screenOptions={{
        drawerPosition: 'right',
        //  headerLeft:null; bte5fe
        headerStyle: {backgroundColor: '#03296a'},
        headerTitleAlign: 'center',
        headerTitle: () => (
          <Image
            source={require('./assets/sync-logo.png')}
            style={{width: 120, height: 100, resizeMode: 'contain'}}
          />
        ),
        headerLeft: () => (
          <Pressable style={{marginLeft: 10}}>
            <EvilIcons name="search" size={30} color="white" />
          </Pressable>
        ),

        headerRight: () => (
          <Pressable onPress={handlePress} style={{marginRight: 20}}>
            <Feather name="menu" size={24} color="white" />
          </Pressable>
        ),
      }}>
      <Drawer.Screen name="Tabs" component={TabStack} />
      <Drawer.Screen name="Home" component={HomeStack} />
    </Drawer.Navigator>
  );
}

const App = () => {
  return (
    <>
      <StatusBar backgroundColor="#03296a" />
      <NavigationContainer>
        <MyDraw />
      </NavigationContainer>
    </>
  );
};

export default App;
=============================
import 'react-native-gesture-handler';
import React, {useLayoutEffect, useState} from 'react';
import {createDrawerNavigator, DrawerItem} from '@react-navigation/drawer';
import {
  ScrollView,
  View,
  StyleSheet,
  Text,
  TextInput,
  Pressable,
  Image,
} from 'react-native';
import {useNavigation} from '@react-navigation/native';
import {DrawerActions} from '@react-navigation/native';
import {useSelector, useDispatch} from 'react-redux';
import {changeIcon} from '../store/redux/slice';
import TabStack from './TabStack';
import DetailScreen from './DetailScreen';
import Feather from 'react-native-vector-icons/Feather';
import Ionicons from 'react-native-vector-icons/Ionicons';
import EvilIcons from 'react-native-vector-icons/EvilIcons';
const Drawer = createDrawerNavigator();

function MyDraw() {
  const dispatch = useDispatch();
  const [text, setText] = useState('');
  const navigation = useNavigation();
  const {backButton} = useSelector(state => state.uiSlice);
  const [drawable, toggleDrawable] = useState(false);
  const [menuItems, setMenuItems] = useState([]);

  const toggleState = () => {
    toggleDrawable(prevState => !prevState);
  };

  const backToTabs = () => {
    dispatch(changeIcon());
    navigation.navigate('Tabs');
  };

  const handlePress = () => {
    navigation.dispatch(DrawerActions.openDrawer());
  };

  const searchByKeyword = async keyword => {
    // setText(keyword);
    try {
      const response = await fetch(
        `https://www.almarkazia.com/ar/api/news/?keyword=${keyword}`,
      );
      const data = await response.json();
      // console.log(data);
    } catch (error) {
      // handle the error
    }
  };

  const getMenuItems = async () => {
    const response = await fetch(
      'https://www.almarkazia.com/ar/api/news/categories/',
    );
    const data = await response.json();
    const items = data.data.map(item => (
      <View key={item.id}>
        <DrawerItem
          name={item.name}
          label={() => (
            <Text style={{color: 'white', fontSize: 15}}>{item.title}</Text>
          )}
        />
      </View>
    ));
    setMenuItems(items);
  };

  useLayoutEffect(() => {
    try {
      getMenuItems();
    } catch (error) {
      console.log('Fetch error: ', error.message);
    }
  }, []);

  return (
    <Drawer.Navigator
      drawerContent={() => (
        <ScrollView style={styles.header}>{menuItems}</ScrollView>
      )}
      screenOptions={{
        drawerStyle: {
          backgroundColor: '#010a1b',
          marginTop: '13%',
          width: '65%',
        },
        drawerPosition: 'right',
        //  headerLeft:null; bte5fe
        headerStyle: {backgroundColor: '#03296a'},
        headerTitleAlign: 'center',
        headerTitle: () =>
          drawable ? (
            <View style={styles.searchContainer}>
              <TextInput
                style={styles.searchInput}
                placeholder="اكتب شيئا..."
                onChangeText={newText => searchByKeyword(newText)}
                // onFocus={() => setIsFocused(true)}
                // onBlur={() => setIsFocused(false)}
              />
            </View>
          ) : (
            <Image
              source={require('../assets/sync-logo.png')}
              style={{width: 120, height: 100, resizeMode: 'contain'}}
            />
          ),
        headerLeft: () => (
          <Pressable
            onPress={!backButton ? toggleState : backToTabs}
            style={{marginLeft: 10}}>
            {backButton && (
              <Ionicons name="chevron-back" size={30} color="white" />
            )}
            {!backButton && (
              <EvilIcons
                name={drawable ? 'close' : 'search'}
                size={30}
                color="white"
              />
            )}
          </Pressable>
        ),

        headerRight: () =>
          drawable ? null : (
            <Pressable onPress={handlePress} style={{marginRight: 20}}>
              <Feather name="menu" size={24} color="white" />
            </Pressable>
          ),
      }}>
      <Drawer.Screen name="Tabs" component={TabStack} />
      <Drawer.Screen name="Detail" component={DetailScreen} />
    </Drawer.Navigator>
  );
}

export default MyDraw;

const styles = StyleSheet.create({
  header: {
    marginTop: 50,
  },
  searchContainer: {
    flexDirection: 'row',
    margin: 10,
    width: 280,
    backgroundColor: 'white',
    borderRadius: 4,
    flex: 1,
    height: 20,
    marginHorizontal: -15,

    zIndex: 3000,
    elevation: 10,
    position: 'relative',
  },
  searchInput: {
    borderColor: 'gray',
    padding: '-2%',
    marginRight: '4%',
    zIndex: 3000,
    flex: 1,
    color: 'black',
    opacity: 0.8,
  },
  backdrop: {
    position: 'absolute',
    top: 0,
    bottom: 0,
    left: 0,
    right: 0,
    backgroundColor: 'rgba(0, 0, 0, 0.5)',
  },
});

/*


 headerLeft: ({toggleState, backButton, drawable}) => (
          <>
            {backButton && (
              <Pressable onPress={toggleState} style={{marginLeft: 10}}>
                <Ionicons name="chevron-back" size={30} color="white" />
              </Pressable>
            )}
            {!backButton && (
              <Pressable onPress={toggleState} style={{marginLeft: 10}}>
                <EvilIcons
                  name={drawable ? 'close' : 'search'}
                  size={30}
                  color="white"
                />
              </Pressable>
            )}
          </>
        ),

*/


======================================

import React from 'react';
import {View, Text, ImageBackground, StyleSheet, Pressable} from 'react-native';

const MyImageWithText = () => {
  return (
    <Pressable style={styles.container}>
      <ImageBackground
        source={{
          uri: 'https://www.lebanonfiles.com/wp-content/uploads/2020/05/ibtisam.jpg',
        }}
        style={styles.image}>
        <View style={styles.topLeftContainer}>
          <Text style={styles.topLeftText}>12:33</Text>
        </View>
        <View style={styles.topRightContainer}>
          <Text style={styles.topRightText}>اقتصاد</Text>
        </View>
        <View style={styles.bottomContainer}>
          <Text style={styles.bottomText}>
            Some other text that starts from the right
          </Text>
        </View>
      </ImageBackground>
    </Pressable>
  );
};

const styles = StyleSheet.create({
  container: {
    position: 'relative',
    marginBottom: 4,
  },
  image: {
    height: 220,
    width: '100%',
    resizeMode: 'cover',
  },
  topLeftContainer: {
    position: 'absolute',
    top: 10,
    left: 10,
    // backgroundColor: 'white',
    paddingVertical: 5,
    paddingHorizontal: 10,
    borderRadius: 5,
  },
  topLeftText: {
    fontSize: 12,
    fontWeight: 'bold',
    color: 'black',
  },
  topRightContainer: {
    position: 'absolute',
    top: 10,
    right: 10,
    backgroundColor: 'white',
    paddingVertical: 5,
    paddingHorizontal: 10,
    borderRadius: 5,
  },
  topRightText: {
    fontSize: 12,
    fontWeight: 'bold',
    color: 'black',
  },
  bottomContainer: {
    position: 'absolute',
    bottom: 10,
    right: 10,
    // backgroundColor: 'white',
    paddingVertical: 5,
    paddingHorizontal: 10,
    borderRadius: 5,
  },
  bottomText: {
    fontSize: 12,
    fontWeight: 'bold',
    color: 'red',
    textAlign: 'right',
  },
});

export default MyImageWithText;
==============================================








import React, {useCallback, useLayoutEffect, useState} from 'react';
import {FlatList, Pressable, StyleSheet, Text, View, Image} from 'react-native';
import {useDispatch, useSelector} from 'react-redux';
import {changeIcon} from '../store/redux/slice';
import {setNews} from '../store/redux/slice';
import MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';
import MyImageWithText from './MyImageWithText';

const Tab1Screen = ({navigation}) => {
  const [isLoading, setIsLoading] = useState(true);

  const dispatch = useDispatch();
  const {news} = useSelector(state => state.uiSlice);

  useLayoutEffect(() => {
    let mounted = true;
    setIsLoading(true);
    getNews().then(arrayOfNews => {
      if (mounted) {
        dispatch(setNews(arrayOfNews.data));
        setIsLoading(false); // Set loading status to false when data is fetched
      }
    });
    return () => {
      mounted = false;
    };
  }, [dispatch]);

  async function getNews() {
    const response = await fetch(
      'https://www.almarkazia.com/ar/api/news/?category=7',
    );
    const arrayOfNews = await response.json();
    return arrayOfNews;
  }

  const renderCategoryItem = useCallback(
    ({item: itemData}) => {
      const pressHandler = () => {
        dispatch(changeIcon());
        navigation.navigate('Detail', {
          categoryId: itemData.id,
          categoryDate: itemData.date,
          categoryItemTitle: itemData.category.title,
          categoryImage: itemData.image,
          categoryTitle: itemData.title,
          categoryContent: itemData.content,
          categoryUrl: itemData.url,
        });
      };

      return (
        <Pressable style={styles.item} onPress={pressHandler}>
          <View>
            <Image source={{uri: itemData.image}} style={styles.articleImage} />
            <View style={styles.secondContainer}>
              <Text style={styles.dateOfNews}>
                <MaterialCommunityIcons
                  name="clock-time-nine"
                  size={7}
                  color="#03296a"
                />
                {itemData.date.split(' ')[0]}
              </Text>
              <Text style={styles.iqtisad}>{itemData.category.title}</Text>
            </View>
            <Text style={styles.firstTitle}>
              {itemData.longTitle
                .split(' ')
                .filter((word, index) => index < 13)
                .join(' ')}
            </Text>
          </View>
        </Pressable>
      );
    },
    [dispatch, navigation],
  );

  return (
    <>
      {isLoading ? ( // Render "Please wait" text if loading
        <View style={styles.loadingContainer}>
          <Text style={styles.loadingText}>الرجاء الانتظار قليلاً...</Text>
        </View>
      ) : (
        <FlatList
          data={news.slice(1)}
          keyExtractor={() => Math.random() * 1000}
          numColumns={2}
          columnWrapperStyle={{justifyContent: 'center', alignItems: 'center'}}
          ListHeaderComponent={<MyImageWithText news={news[0]} />}
          renderItem={renderCategoryItem}
        />
      )}
    </>
  );
};

const styles = StyleSheet.create({
  columnWrapper: {
    flexWrap: 'wrap',
    flexDirection: 'row',
    justifyContent: 'space-evenly',
  },
  item: {
    backgroundColor: '#ffffff',
    alignItems: 'center',
    justifyContent: 'center',
    margin: 5,
    height: 190,
    width: '45%',
    shadowColor: '#000',
    shadowOffset: {
      width: 0,
      height: 2,
    },
    shadowOpacity: 0.23,
    shadowRadius: 1.62,
    elevation: 2,
  },
  articleImage: {
    height: '60%',
  },
  secondContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'baseline',
  },
  dateOfNews: {
    fontSize: 7,
  },
  categoryTitle: {
    color: '#03296a',
    fontWeight: 'bold',
    fontSize: 10,
    marginVertical: 5,
    marginHorizontal: 10,
    textAlign: 'left',
  },
  categoryContent: {
    fontSize: 7,
    marginHorizontal: 10,
    marginBottom: 5,
    textAlign: 'left',
  },
  iqtisad: {
    backgroundColor: '#03296a',
    color: 'white',
    padding: 4,
    fontSize: 7,
    fontWeight: 'bold',
  },
  firstTitle: {
    fontSize: 10,
    fontWeight: 'bold',
    color: '#03296a',
    marginHorizontal: 1,
  },
  loadingContainer: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
  },
  loadingText: {
    fontSize: 20,
    fontWeight: 'bold',
  },
});

export default Tab1Screen;
